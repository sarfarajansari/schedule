{"version":3,"sources":["service.js","components/app_data/app_data.jsx","components/nav/Nav.jsx","components/request/get_request.js","components/content/Lecture.jsx","components/clock/clock.jsx","components/content/content.jsx","components/footer/footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","app_data","Nav","className","name","GetRequest","url","set","a","loaded","auth","headers","localStorage","getItem","requestdata","method","Url","replace","fetch","response","json","data","Btn","props","href","link","Lecture","item","subject","teacher","style","color","hourLeft","minuteLeft","sec","Newclock","useState","Date","value","setValue","useEffect","interval","setInterval","clearInterval","toDateString","toLocaleTimeString","n","Content","setdata","setloaded","setsec","Getrequest","map","Footer","textAlign","fontSize","marginBottom","App","status","setauth","document","getElementById","width","String","parseInt","screen","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","service"],"mappings":"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","file":"static/js/main.ef0926fb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","const app_data={\r\n    \"name\":\"Schedule\",\r\n    \"url\":\"https://sarfaraj4444.pythonanywhere.com/schedule\",\r\n    // \"url\":\"http://127.0.0.1:8000/schedule\"\r\n}\r\nexport default app_data","import React from 'react'\r\nimport \"./nav.css\"\r\nimport app_data from \"../app_data/app_data\"\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"projname\">{app_data.name}</div>\r\n        </div>\r\n    )\r\n}\r\n","import app_data from \"../app_data/app_data\"\r\nexport default async function GetRequest(url,set,loaded=\"\",auth=false) {\r\n    var headers = { 'Content-Type': 'application/json' }\r\n    if (localStorage.getItem('Token') !== null){\r\n        headers[\"Authorization\"]=\"Token \" + localStorage.getItem('Token')\r\n    }\r\n    const requestdata = {\r\n        method: 'GET',\r\n        headers: headers,\r\n    }\r\n    var Url = app_data.url+ url\r\n    if(auth){\r\n        Url = app_data.url.replace(\"schedule\",\"auth/\")+ url\r\n    }\r\n    const response = await fetch(Url,requestdata)\r\n    const data = await response.json()\r\n    set(data)\r\n    if(loaded){\r\n        loaded(0)\r\n    }\r\n    return data\r\n}","\r\n\r\nfunction Btn(props){\r\n    return(\r\n        <div><a href={props.link}><button  className=\"join-btn\">Join</button></a></div>\r\n    )\r\n}\r\nexport default function Lecture(props){\r\n    \r\n    const item = props.item;\r\n    \r\n    const hour =()=>{\r\n        if(item.hourLeft <=0){\r\n            return 0\r\n        }\r\n        return item.hourLeft\r\n    }\r\n    const minute =()=>{\r\n        if(item.minuteLeft <=0){\r\n            return 0\r\n        }\r\n        return item.minuteLeft\r\n    }\r\n    const second =()=>{\r\n        if(item.minuteLeft<=0 && item.hourLeft <=0){\r\n            return 0\r\n        }\r\n        return props.sec\r\n    }\r\n    return(\r\n        <div className=\"box-element lecture\">\r\n            <div><h4>{item.subject} {\" with \"} {item.teacher}</h4></div>\r\n            <div className=\"lectime\"  style={{color:\"blue\"}}><p1>{\"Lecture in  \"} {hour()}hr {\": \"} {minute()}min  {\" : \"}{second()}s</p1></div>\r\n            <Btn link={item.link}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n{/* <div><a href={props.link}><button  disabled className=\"join-btn\">Join</button></a></div> */}","import React, { useEffect, useState } from 'react';\r\nimport \"./clock.css\"\r\nexport default function Newclock() {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(\r\n      () => setValue(new Date()),\r\n      1000\r\n    );\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"box-element clock-container\">\r\n        {value.toDateString()}\r\n      </div>\r\n      <p className=\"time\"> {value.toLocaleTimeString()} </p>\r\n\r\n    </>\r\n  )\r\n}","import Getrequest from \"../request/get_request\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport Lecture from \"./Lecture\"\r\nimport \"./content.css\"\r\nimport Newclock from\"../clock/clock\"\r\nvar n = 60\r\n\r\n\r\nexport default function Content() {\r\n    const [data, setdata] = useState([])\r\n    const [loaded, setloaded] = useState(1)\r\n    const [sec, setsec] = useState(60)\r\n    const down=()=>{\r\n        setsec(n)\r\n    }\r\n    useEffect(() => {\r\n        Getrequest(\"\",setdata,setloaded)\r\n        setInterval(() => {\r\n            Getrequest(\"\",setdata,setloaded)\r\n        },60000);\r\n        \r\n        const interval = setInterval(() => {\r\n            n-=1\r\n            if(n<0){\r\n                n=60\r\n            }\r\n            down()\r\n        }, 1000);\r\n        return () => {\r\n            console.log(`clearing interval`);\r\n            clearInterval(interval);\r\n          };\r\n    }, [])\r\n    return (\r\n        <>\r\n        <div className=\"content-container\">\r\n            {data.map((item)=>{\r\n                return(\r\n                    <Lecture item={item} sec={sec}/>\r\n                )\r\n            })}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {AiFillTwitterCircle,AiFillGithub} from \"react-icons/ai\"\r\nimport {CgInstagram} from \"react-icons/cg\"\r\nimport {ImLinkedin} from \"react-icons/im\"\r\nimport \"./footer.css\"\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer-container\">\r\n            <div className=\"tag\">@2021 Sarfarajansari <hr/></div>\r\n            <p style={{textAlign:\"center\",fontSize:\"2rem\",marginBottom:\"1rem\",color:\"white\"}}>Social</p>\r\n            <div className=\"social-item\">\r\n                 <a href=\"https://twitter.com/Sarfraj49393426\"><AiFillTwitterCircle  className=\"social-icon main\"/><div className=\"social-name\" >Twitter</div></a>\r\n                 <a href=\"https://www.instagram.com/sarfarajansari_/\"><CgInstagram className=\"social-icon main\"/><div className=\"social-name\">Instagram</div></a>\r\n                 <a href=\"https://github.com/sarfarajansari\"><AiFillGithub className=\"social-icon main\"/><div className=\"social-name\">Github</div></a>\r\n                 <a href=\"https://www.linkedin.com/in/sarfaraj-ansari-a0a9441b9/\"><ImLinkedin className=\"social-icon main\"/><div className=\"social-name\">LinkedIn</div></a>\r\n\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Nav from \"./components/nav/Nav\";\nimport Content from \"./components/content/content\"\nimport { useEffect, useState } from \"react\";\nimport GetRequest from \"./components/request/get_request\";\nimport Footer from \"./components/footer/footer\";\nimport Newclock from \"./components/clock/clock\";\n\n// import { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  const [auth, setauth] = useState({\n    status:-1\n  });\n  useEffect(() => {\n    GetRequest(\"test/\",setauth,\"\",true);\n  }, []);\n  document.getElementById(\"App-container\").style.width =\n    String(parseInt(window.screen.width) - 80) + \"px\";\n  if(auth.status===\"1\"){\n    return <h2>You are not autherized to view this page!</h2>\n  }\n  return (\n    <div id=\"grid\">\n      <div id=\"navbar\"><Nav/></div>\n      <div id=\"content\"><Newclock/> <Content/></div>\n      <div id=\"footer\"><Footer/> </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as service from \"./service\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nservice.register()"],"sourceRoot":""}